openapi: 3.0.3
info:
  title: Biophilia Visualiser
  version: 0.0.1
  description: API for the Biophilia Visualiser application.

servers:
  - url: http://localhost:4941/api/v1
tags:
  - name: admin
    description: Operations for administrators
    
  - name: participant
    description: Operations for participants
    
  - name: session
    description: Access to participants stored data including timeframes
    
  - name: timeframe
    description: Operations for timeframes

security:
  - ApiKeyAuth: []
paths:
  /admin/login:
    post:
      tags: [admin]
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLoginResponse'
        '401':
          description: Invalid username/password
        '500':
          description: Internal server error
  /admin/logout:
    post:
      tags: [admin]
      summary: Admin logout
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /participant:
    get:
      tags: [participant]
      summary: Get list of participants
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful retrieval of participants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags: [participant]
      summary: Create a new participant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                age:
                  type: integer
                gender:
                  type: string
                activityLevel:
                  type: string
                hasAcceptedTerms:
                  type: boolean
              required:
                - firstName
                - lastName
                - email
                - age
                - gender
                - activityLevel
                - hasAcceptedTerms
      responses:
        '201':
          description: Participant created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  participantId:
                    type: string
        '422':
          description: Unable to insert participant
        '500':
          description: Internal server error

  /participant/{id}:
    get:
      tags: [participant]
      summary: Get participant by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of participant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        '401':
          description: Unauthorized
        '404':
          description: Participant not found
        '500':
          description: Internal server error
    delete:
      tags: [participant]
      summary: Delete participant by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Participant deleted successfully
        '401':
          description: Unauthorized
        '204':
          description: No content
        '500':
          description: Internal server error

  /session:
    post:
      tags: [session]
      summary: Create a new session
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                participantId:
                  type: string
                name:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/SessionData'
              required:
                - participantId
                - name
                - startTime
                - endTime
                - data
      responses:
        '201':
          description: Session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
        '422':
          description: Unable to insert session or data
        '500':
          description: Internal server error

  /session/{id}:
    get:
      tags: [session]
      summary: Get session by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '404':
          description: Session not found
        '500':
          description: Internal server error
    delete:
      tags: [session]
      summary: Delete session by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session deleted successfully
        '401':
          description: Unauthorized
        '204':
          description: No content
        '500':
          description: Internal server error

  /timeframe:
    post:
      tags: [timeframe]
      summary: Create a new timeframe
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                description:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
              required:
                - sessionId
                - description
                - startTime
                - endTime
      responses:
        '201':
          description: Timeframe created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeframeId:
                    type: string
        '422':
          description: Unable to insert timeframe
        '500':
          description: Internal server error

  /timeframe/{id}:
    delete:
      tags: [timeframe]
      summary: Delete timeframe by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Timeframe deleted successfully
        '401':
          description: Unauthorized
        '204':
          description: No content
        '500':
          description: Internal server error
          
    patch:
      tags: [timeframe]
      summary: Update timeframe by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                description:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Timeframe updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Timeframe not found
        '500':
          description: Internal server error

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Authorisation
  schemas:
    AdminLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    AdminLoginResponse:
      type: object
      properties:
        adminId:
          type: string
        token:
          type: string
    Participant:
      type: object
      properties:
        participantId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        age:
          type: integer
        gender:
          type: string
        activityLevel:
          type: string
        hasAcceptedTerms:
          type: boolean
    SessionData:
      type: object
      properties:
        value:
          type: number
        time:
          type: string
          format: date-time
    Session:
      type: object
      properties:
        sessionId:
          type: string
        participantId:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        data:
          type: array
          items:
            $ref: '#/components/schemas/SessionData'
    Timeframe:
      type: object
      properties:
        timeframeId:
          type: string
        sessionId:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time